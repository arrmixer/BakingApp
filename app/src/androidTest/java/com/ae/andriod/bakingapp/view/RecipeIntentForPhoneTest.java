package com.ae.andriod.bakingapp.view;

import android.support.test.espresso.ViewInteraction;
import android.support.test.runner.AndroidJUnit4;
import android.support.test.espresso.intent.rule.IntentsTestRule;
import android.app.Activity;
import android.view.View;
import android.view.ViewGroup;
import android.view.ViewParent;


import com.ae.andriod.bakingapp.R;

import org.hamcrest.Description;
import org.hamcrest.Matcher;
import org.hamcrest.Matchers;
import org.hamcrest.TypeSafeMatcher;
import org.junit.Before;
import org.junit.Rule;
import org.junit.Test;
import org.junit.runner.RunWith;


import static android.support.test.espresso.Espresso.onView;
import static android.support.test.espresso.action.ViewActions.scrollTo;
import static android.support.test.espresso.contrib.RecyclerViewActions.actionOnItemAtPosition;
import static android.support.test.espresso.intent.matcher.IntentMatchers.hasExtraWithKey;
import static android.support.test.espresso.matcher.ViewMatchers.withClassName;
import static android.support.test.espresso.matcher.ViewMatchers.withText;
import static org.hamcrest.Matchers.is;
import static org.hamcrest.core.AllOf.allOf;
import static org.hamcrest.core.IsNot.not;
import static android.support.test.espresso.matcher.ViewMatchers.withId;
import static android.support.test.espresso.action.ViewActions.click;
import static android.app.Instrumentation.ActivityResult;
import static android.support.test.espresso.intent.Intents.intended;
import static android.support.test.espresso.intent.Intents.intending;
import static android.support.test.espresso.intent.matcher.IntentMatchers.isInternal;


@RunWith(AndroidJUnit4.class)
public class RecipeIntentForPhoneTest {



    @Rule
    public IntentsTestRule<RecipeActivity> mActivityRule = new IntentsTestRule<>(
            RecipeActivity.class);



    @Before
    public void stubAllExternalIntents() {
        // By default Espresso Intents does not stub any Intents. Stubbing needs to be setup before
        // every test run. In this case all external Intents will be blocked.
        intending(not(isInternal())).respondWith(new ActivityResult(Activity.RESULT_OK, null));
    }

    //making sure ingredient intent are actually sent
    @Test
    public void intentIngredientHasExtras() {

        ViewInteraction appCompatTextView = onView(
                Matchers.allOf(withId(R.id.txt_ingredients), withText("Ingredients"),
                        childAtPosition(
                                childAtPosition(
                                        withClassName(is("android.widget.LinearLayout")),
                                        0),
                                0)));
        appCompatTextView.perform( scrollTo(), click());


        intended(allOf(
                hasExtraWithKey(RecipeListFragment.EXTRA_RECIPE))
        );


    }

    @Test
    public void intentStepHasExtras(){
        ViewInteraction recyclerView = onView(
                Matchers.allOf(withId(R.id.recycler_view_steps)));
        recyclerView.perform(actionOnItemAtPosition(0, click()));


        intended(allOf(
                hasExtraWithKey(RecipeListFragment.EXTRA_RECIPE)));
    }

    //matcher generated by Test Recorder
    private static Matcher<View> childAtPosition(
            final Matcher<View> parentMatcher, final int position) {

        return new TypeSafeMatcher<View>() {
            @Override
            public void describeTo(Description description) {
                description.appendText("Child at position " + position + " in parent ");
                parentMatcher.describeTo(description);
            }

            @Override
            public boolean matchesSafely(View view) {
                ViewParent parent = view.getParent();
                return parent instanceof ViewGroup && parentMatcher.matches(parent)
                        && view.equals(((ViewGroup) parent).getChildAt(position));
            }
        };
    }
}
